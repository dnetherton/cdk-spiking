!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("knex"));else if("function"==typeof define&&define.amd)define(["knex"],t);else{var n="object"==typeof exports?t(require("knex")):t(e.knex);for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(global,function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){e.exports=require("aws-sdk")},function(e,t,n){"use strict";function r(e){for(const t of Object.getOwnPropertyNames(Object.getPrototypeOf(e)))this[t]=function(){const n=e[t](...arguments);return n.promise?n.promise():n}}e.exports=function(e){return new r(e)}},function(t,n){t.exports=e},function(e,t,n){"use strict";n.r(t),n.d(t,"handler",function(){return l});var r=n(0),o=n.n(r),s=n(1),u=n.n(s),c=n(2),i=n.n(c);const a=e=>new Promise(t=>setTimeout(t,e)),f=process.env.AWS_REGION||"ap-southeast-2";let p;async function l(e){try{const e=await async function(){if(p)return p;if(process.env.DATABASE)return p=JSON.parse(process.env.DATABASE);const e=u()(new o.a.SecretsManager);return p=await e.getSecretValue({SecretId:process.env.DATABASE_SECRET}),JSON.parse(p.SecretString)}();console.log(JSON.stringify(e));const t=i()({client:"mysql",connection:{host:e.host,user:e.username,password:e.password,database:e.dbname}}),n=await t.raw("select 1 as blah");return await a(1500),{statusCode:200,body:`Database connection: ${JSON.stringify(n)}\n`}}catch(e){return console.log(e.stack),await a(1500),{statusCode:500,body:e.stack}}}o.a.config.update({region:f})}])});